# Author: Alex Lee

# App Info
app: vehicle-serverless-app
service: vehicle-serverless
org: alexkunlee

# Plugins
plugins:
   - serverless-stack-output
   - serverless-appsync-plugin

package:
  exclude:
    - ./front/**
    - front/**
    - ./node_modules/**
    - node_modules/**
      
provider:
  name: aws
  region: us-west-2
  runtime: nodejs12.x
  stage: ${opt:stage, "test"}

# Customs
custom:
  stage: test
  output:
    file: ./front/src/stack.json
  appSync:
    name: ${self:service}-${self:custom.stage}
    authenticationType: API_KEY
    logConfig:
      loggingRoleArn: { Fn::GetAtt: [AppSyncLoggingServiceRole, Arn] }
      level: ALL
    mappingTemplates:
      - dataSource: Vehicle
        type: Mutation
        field: createVehicle
        request: "createVehicle-request-mapping-template.txt"
        response: "createVehicle-response-mapping-template.txt"
      - dataSource: Vehicle
        type: Mutation
        field: updateVehicle
        request: "updateVehicle-request-mapping-template.txt"
        response: "updateVehicle-response-mapping-template.txt"  
      - dataSource: Vehicle
        type: Query
        field: getVehicle
        request: "getVehicle-request-mapping-template.txt"
        response: "getVehicle-response-mapping-template.txt"
    schema: schema.graphql
    dataSources:
      - type: AMAZON_DYNAMODB
        name: Vehicle
        description: Vehicle Table
        config:
          tableName: { Ref: VehicleTable }
          serviceRoleArn: { Fn::GetAtt: [AppSyncDynamoDBServiceRole, Arn] } 
          iamRoleStatements:
            - Effect: "Allow"
              Action:
                - "dynamodb:*"
              Resource:
                - "arn:aws:dynamodb:::table/Vehicle"
                - "arn:aws:dynamodb:::table/Vehicle/*"

resources:
  - ${file(resources/roles.yml)}
  - ${file(resources/dynamodb-table.yml)}
  - ${file(resources/outputs.yml)}
  